name: Build and Deploy Node.js App to Azure

on:
  push:
    branches: 
      - master
    paths-ignore:
      - 'infrastructure/**'
      - 'Policies/**'

env:
  AZURE_WEBAPP_NAME: SampleApp
  AZURE_WEBAPP_PACKAGE_PATH: './application'
  NODE_VERSION: '22.x'

jobs:
  build:
    name: Build and Test Node App
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: npm install, build, and test
        run: |
          cd application
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Run unit tests
        continue-on-error: false
        run: |
          cd tests
          npm install
          gulp unittest

      - name: Creating artifact directories
        run: mkdir buildartifacts

      - name: Archive Application
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r ./buildartifacts/application.zip ./application

      - name: Upload Application to Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: buildartifacts
          path: buildartifacts

  deploy:
    name: Deploy to Azure Web App
    needs: build
    runs-on: ubuntu-latest
    environment: production  # âœ… Correct placement

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: buildartifacts
          path: buildartifacts

      - name: Unzip Build Artifact
        uses: montudor/action-zip@v1
        with:
          args: unzip -qq ./buildartifacts/application.zip -d .

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  functionalTests:
    name: Run Functional Tests
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run Functional Tests
        run: |
          echo "Running functional tests"
          # Add your actual test commands here
